// <auto-generated />
using System;
using ClassAttendance.DAL.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ClassAttendance.DAL.Migrations
{
    [DbContext(typeof(ClassAttendanceContext))]
    [Migration("20191106103105_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ClassAttendance.Models.Models.EducationalInstitution", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("City");

                    b.Property<int>("Country");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Name");

                    b.Property<int>("Type");

                    b.HasKey("Id");

                    b.ToTable("EducationalInstitutions");
                });

            modelBuilder.Entity("ClassAttendance.Models.Models.EducationalInstitutionFaculty", b =>
                {
                    b.Property<Guid>("FacultyId");

                    b.Property<Guid>("EducationalInstitutionId");

                    b.HasKey("FacultyId", "EducationalInstitutionId");

                    b.HasIndex("EducationalInstitutionId");

                    b.ToTable("EducationalInstitutionFaculty");
                });

            modelBuilder.Entity("ClassAttendance.Models.Models.Faculty", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("DeanId");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Faculties");
                });

            modelBuilder.Entity("ClassAttendance.Models.Models.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("ClassAttendance.Models.Models.Specialty", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("FacultyId");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Name");

                    b.Property<int>("Number");

                    b.HasKey("Id");

                    b.HasIndex("FacultyId");

                    b.HasIndex("Number")
                        .IsUnique();

                    b.ToTable("Specialties");
                });

            modelBuilder.Entity("ClassAttendance.Models.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Birthday");

                    b.Property<string>("Email");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastName");

                    b.Property<string>("Name");

                    b.Property<string>("Password");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ClassAttendance.Models.Models.UsersRoles", b =>
                {
                    b.Property<Guid>("UserId");

                    b.Property<Guid>("RoleId");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UsersRoles");
                });

            modelBuilder.Entity("ClassAttendance.Models.Models.EducationalInstitutionFaculty", b =>
                {
                    b.HasOne("ClassAttendance.Models.Models.EducationalInstitution", "EducationalInstitution")
                        .WithMany("EducationalInstitutionFaculty")
                        .HasForeignKey("EducationalInstitutionId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ClassAttendance.Models.Models.Faculty", "Faculty")
                        .WithMany("EducationalInstitutionFaculty")
                        .HasForeignKey("FacultyId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ClassAttendance.Models.Models.Specialty", b =>
                {
                    b.HasOne("ClassAttendance.Models.Models.Faculty", "Faculty")
                        .WithMany("Specialties")
                        .HasForeignKey("FacultyId");
                });

            modelBuilder.Entity("ClassAttendance.Models.Models.UsersRoles", b =>
                {
                    b.HasOne("ClassAttendance.Models.Models.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ClassAttendance.Models.Models.User", "User")
                        .WithMany("UsersRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
